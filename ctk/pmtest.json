{"info":{"_postman_id":"924c2788-d9b2-4215-aa94-3df1b1c2ac74","name":"CTK-Resource_Inventory-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/Resource","event":[{"listen":"test","script":{"id":"ee56e896-5f20-4a6c-be44-2e5538c05692","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFRE01', instance['href']);","pm.globals.set('IDRE01', instance['id']);","pm.globals.set('NAMERE01', instance['name']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"RouterXX\"\n}"},"url":{"raw":"{{Resource_Inventory}}resource","host":["{{Resource_Inventory}}resource"]},"description":"This operation creates a Resource"},"response":[]},{"name":"/Resource","event":[{"listen":"test","script":{"id":"b2b81afe-b136-4010-998a-599959cb8aaa","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRE01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE01');});","            pm.test('id is ' + pm.globals.get(\"IDRE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE01');});","            pm.test('name is ' + pm.globals.get(\"NAMERE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE01');});","        }","        if (instance.id == pm.globals.get(\"IDRE02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE02');});","            pm.test('id is ' + pm.globals.get(\"IDRE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE02');});","            pm.test('name is ' + pm.globals.get(\"NAMERE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRE01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE01');});","            pm.test('id is ' + pm.globals.get(\"IDRE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE01');});","            pm.test('name is ' + pm.globals.get(\"NAMERE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE01');});","        }","        if (instance.id == pm.globals.get(\"IDRE02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE02');});","            pm.test('id is ' + pm.globals.get(\"IDRE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE02');});","            pm.test('name is ' + pm.globals.get(\"NAMERE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource","host":["{{Resource_Inventory}}resource"]},"description":"This operation search for the created Resource"},"response":[]},{"name":"/Resource/{{IDRE01}}","event":[{"listen":"test","script":{"id":"6523767c-1852-49d7-87c1-484f25dc3eed","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRE01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE01');});","            pm.test('id is ' + pm.globals.get(\"IDRE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE01');});","            pm.test('name is ' + pm.globals.get(\"NAMERE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE01');});","        }","        if (instance.id == pm.globals.get(\"IDRE02\")) {","            pm.test('IDRE02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRE01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE01');});","            pm.test('id is ' + pm.globals.get(\"IDRE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE01');});","            pm.test('name is ' + pm.globals.get(\"NAMERE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE01');});","        }","        if (instance.id == pm.globals.get(\"IDRE02\")) {","            pm.test('IDRE02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource/{{IDRE01}}","host":["{{Resource_Inventory}}resource"],"path":["{{IDRE01}}"]},"description":"This operation search for one of the created Resource"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/Resource?fields=href","event":[{"listen":"test","script":{"id":"6f4f0747-62af-4120-aea0-cf2e9dc1a9c8","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource?fields=href","host":["{{Resource_Inventory}}resource"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filters a Resource"},"response":[]},{"name":"/Resource?fields=id","event":[{"listen":"test","script":{"id":"20446b8d-199f-4d52-a240-1b4181c9b00e","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource?fields=id","host":["{{Resource_Inventory}}resource"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filters a Resource"},"response":[]},{"name":"/Resource?fields=href","event":[{"listen":"test","script":{"id":"80bd6952-588b-4b9b-80f5-3f1183831ce8","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource?fields=href","host":["{{Resource_Inventory}}resource"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filters a Resource"},"response":[]},{"name":"/Resource?fields=id","event":[{"listen":"test","script":{"id":"14ce930b-4448-42ef-9470-5c90b2e02680","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource?fields=id","host":["{{Resource_Inventory}}resource"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filters a Resource"},"response":[]},{"name":"/Resource?fields=name","event":[{"listen":"test","script":{"id":"74f88a26-7a61-4a8d-a3c6-6af56436a200","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource?fields=name","host":["{{Resource_Inventory}}resource"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filters a Resource"},"response":[]},{"name":"/Resource?name={{NAMERE01}}","event":[{"listen":"test","script":{"id":"d5421721-2567-4309-98ca-f572aaa0d024","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRE01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE01');});","            pm.test('id is ' + pm.globals.get(\"IDRE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE01');});","            pm.test('name is ' + pm.globals.get(\"NAMERE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE01');});","        }","        if (instance.id == pm.globals.get(\"IDRE02\")) {","            pm.test('IDRE02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRE01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRE01');});","            pm.test('id is ' + pm.globals.get(\"IDRE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRE01');});","            pm.test('name is ' + pm.globals.get(\"NAMERE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERE01');});","        }","        if (instance.id == pm.globals.get(\"IDRE02\")) {","            pm.test('IDRE02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource?name={{NAMERE01}}","host":["{{Resource_Inventory}}resource"],"query":[{"key":"name","value":"{{NAMERE01}}"}]},"description":"This operation filters a Resource"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/Resource/404ID","event":[{"listen":"test","script":{"id":"302f28a1-576c-4c9a-8d62-9d55f5e2bc79","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"url":{"raw":"{{Resource_Inventory}}resource/907d9939-c640-438a-8461-a6bd53924214","host":["{{Resource_Inventory}}resource"],"path":["907d9939-c640-438a-8461-a6bd53924214"]},"description":"This operation search for one of the created Resource"},"response":[]}],"protocolProfileBehavior":{}}],"protocolProfileBehavior":{}}